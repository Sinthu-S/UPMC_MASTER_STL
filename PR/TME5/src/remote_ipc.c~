#define SVID_SOURCE 1
#include <stdio.h>
#include <stdlib.h>
#include <sys/ipc.h>
#include <sys/msg.h>

struct message{
  long id;
  int val;
}msg;

int remonte_pic(int n, int msg_id){
  int nbProc=n;
  int sum=0;
  pid_t pid;
  int i=n;

  do{
    nbProc--;
    pid=fork();
  }while(nbProc > 0 && pid != 0);

  if(pid == 0){
    msg.type=1;
    srand();
    msg.val=(int) (10*(float)rand()/ RAND_MAX);
    msgsnd(msg_id , &msg , sizeof(msg), 0);
  }else{

    while(nbProc<n){
      wait(NULL);
      nbProc++;
    }

    while(nbProc>-1){
      msgrcv(msg_id , &msg , sizeof(msg), 1,0);
      sum+=msg.val;
      nbProc--;
    }

    
  
}


int main(int argc, char** argv){
  int msg_id;
  key_t cle;
  char path="remonte_pic";
  char code ='Q';

  if(argc < 2){
      perror("manque argument");
    exit(1);
  }

  cle = ftok(path, code);
  msg_id = msgget(cle, 0666 | IPC_CREAT);
  
  remonte_pic(atoi(argv[1]), msg_id);

  msgctl(msg_id, IPC_RMID,NULL);
    
}
